#  $Archive:: /Ti/AMMPI/Makefile                                         $
#     $Date: 2004/01/27 09:19:10 $
# $Revision: 1.3 $
# Description: Makefile for AMMPI
# Copyright 2000, Dan Bonachea <bonachea@cs.berkeley.edu>

# leave these lines alone
testprograms_ILP32only_all = testgetput testreadwrite
testprograms_ILP32only = ${testprograms_ILP32only_all}

# Set host system to the appropriate value to get the right prebaked Makefile
HOSTSYSTEM=${OSTYPE}.${MACHTYPE}
include Makefile.${HOSTSYSTEM}

# Uncomment one set of lines below to get debug or release configuration 
#ccflags = -DAMMPI_DEBUG=1 ${ccdebugflags}
ccflags = -DAMMPI_NDEBUG=1 ${ccoptflags}

#-------------------------------------------------------------------------------------
# You should never need to change things below this line

VPATH = $(srcdir)
includes = -I$(srcdir)
libraries = ${platform_libraries}
Ccompile = $(CC) -c ${ccflags} ${platform_defines} ${includes}
link = $(CC) ${ccflags} ${platform_defines} ${includes} 
linkend = ${libraries}

# all the test executables
testprograms =                  \
    testam                      \
    testbounce                  \
    testbulk                    \
    testlatency                 \
    testping                    \
    testreduce                  \
    $(testprograms_ILP32only)

# all the library objects and headers
objects=ammpi_ep.o ammpi_reqrep.o ammpi_spmd.o 
headers=Makefile* ammpi.h ammpi_internal.h ammpi_spmd.h

.PHONY: all tests clean veryclean

all: libammpi.a

# ---------- AMMPI library -------------
libammpi.a: ${objects}
	${ar} cru $@ ${objects}
	${ranlib} $@

# ---------- build targets -------------
# main target
tests: apputils.o ${testprograms}

# method to convert .cpp to .o (more reliable than ".cpp.o" method)
%.o : %.c ${headers}
	${Ccompile} -DAMMPI $< -o $@

%.o : %.cpp ${headers}
	${CXXcompile} $< -o $@

# delete compiling byproducts
clean:
	rm -f *.o core gmon.out

veryclean: clean 
	rm -f ${testprograms} ${testprograms_ILP32only_all} libammpi.a
	@echo Done verycleaning.


# ---------- test programs -------------
test% : test%.o apputils.o libammpi.a ${libufxp}
	${link} -o $@ $< apputils.o -L. -lammpi ${linkend}

