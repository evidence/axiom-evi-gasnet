#  $Archive:: /Ti/AMUDP/Makefile                                         $
#     $Date: 2003/12/19 13:48:10 $
# $Revision: 1.1 $
# Description: Makefile for AMUDP
# Copyright 2000, Dan Bonachea <bonachea@cs.berkeley.edu>

# Set host system to the appropriate value to get the right prebaked Makefile

HOSTSYSTEM=${OSTYPE}.${MACHTYPE}
include Makefile.${HOSTSYSTEM} 

# Uncomment one set of lines below to get debug or release configuration 

#ccflags = -DAMUDP_DEBUG=1 ${ccdebugflags} 
#cxxflags = -DAMUDP_DEBUG=1 ${cxxdebugflags}

ccflags = -DAMUDP_NDEBUG=1 ${ccoptflags}
cxxflags = -DAMUDP_NDEBUG=1 ${cxxoptflags}

#-------------------------------------------------------------------------------------
# You should never need to change things below this line

VPATH = $(srcdir)
includes = -I$(srcdir) ${glunix_includes} ${rexec_includes} ${ueth_includes}
libraries = ${glunix_libraries} ${ueth_libraries} ${platform_libraries}
Ccompile = $(CC) -c ${ccflags} ${platform_defines} ${includes}
CXXcompile = $(CXX) -c ${cxxflags} ${platform_defines} ${includes}
link = $(CXX) ${cxxflags} ${platform_defines} ${includes} 
linkend = ${libraries}

# all the test executables
testprograms = testamudp testgetput testreadwrite testping testbulk testbounce testreduce testlatency

# all the library objects and headers
objects=amudp_ep.o amudp_reqrep.o amudp_spmd.o amudp_spawn.o exc.o sig.o socklist.o sockutil.o
headers=Makefile* amudp.h amudp_internal.h amudp_spmd.h

.PHONY: all tests clean veryclean dist

all: libamudp.a

# ---------- AMUDP library -------------
libamudp.a: ${objects}
	${ar} cru $@ ${objects}
	${ranlib} $@

# ---------- build targets -------------
# main target
tests: ${testprograms}
	@csh -c 'if ("`hostname`" == "whomp") \
    eval "echo placing whomp-shared binaries... ; /bin/cp -f ${testprograms} /export/home/${USER} ; cd /export/home/${USER} ; chmod a+rx ${testprograms}"'

# method to convert .cpp to .o (more reliable than ".cpp.o" method)
%.o : %.c ${headers}
	${Ccompile} $< -o $@

%.o : %.cpp ${headers}
	${CXXcompile} $< -o $@

# delete compiling byproducts
clean:
	rm -f *.o core gmon.out

veryclean: clean 
	rm -f ${testprograms} libamudp.a
	@csh -c 'if ("`hostname`" == "whomp") \
    eval "echo removing whomp-shared binaries... ; cd /export/home/${USER} ; rm -f ${testprograms}"'
	@echo Done verycleaning.

# make a distribution
dist:
	rm -f dist.tar.gz
	tar -cvhf dist.tar dist && gzip -9 dist.tar

# ---------- test programs -------------
test% : test%.o apputils.o libamudp.a ${ueth_libraries}
	${link} -o $@ $< apputils.o -L. -lamudp ${linkend}

