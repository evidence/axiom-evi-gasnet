# This Makefile fragment is used to build GASNet conduits 
# it is not meant to be used directly 
# @configure_input@

.PHONY: do-all do-error libs force clean-local                  \
        do-clean-local do-install-data-local do-uninstall-local \
        do-libgasnet-seq do-libgasnet-par do-libgasnet-parsync  \
	test tests tests-seq tests-par tests-parsync tests-clean 

# our current libgasnet compilation scheme is incompatible with parallel make
.NOTPARALLEL:

thread_defines = @GASNET_THREAD_DEFINES@

# header files to be installed
# Conduit-specific headers will overwrite any conflicts in extended-ref
headers = $(top_srcdir)/extended-ref/*.h $(srcdir)/*.h $(CONDUIT_EXTRAHEADERS)

makefile_fragments =                \
        $(CONDUIT_NAME)-seq.mak     \
@HAVE_PTHREAD_TRUE@  $(CONDUIT_NAME)-parsync.mak $(CONDUIT_NAME)-par.mak

@GASNET_SEGMENT_FAST_TRUE@GASNET_SEGMENT_STR="FAST"
@GASNET_SEGMENT_LARGE_TRUE@GASNET_SEGMENT_STR="LARGE"
@GASNET_SEGMENT_EVERYTHING_TRUE@GASNET_SEGMENT_STR="EVERYTHING"

VPATH=$(srcdir)

LIBINCLUDES =             \
        -I$(srcdir)       \
        -I$(top_srcdir)   \
        -I$(top_builddir) \
        -I$(top_srcdir)/other \
        -I$(top_srcdir)/extended-ref  

LIBDEFINES =                        \
        $(LIBGASNET_THREAD_DEFINES) \
        -DGASNET_$(THREAD_MODEL)    \
        @BUILDCONFIG_DEFINES@       \
        @GASNET_MACHINE_DEFINES@ 

LIBCFLAGS =                       \
        @CFLAGS@                  \
        @MISC_CFLAGS@             \
        $(LIBDEFINES)             \
        $(CONDUIT_EXTRALIBCFLAGS) \
	$(LIBINCLUDES)

libgasnet_sources =           \
        $(CONDUIT_SOURCELIST) \
	$(top_srcdir)/gasnet_internal.c	  

libgasnet_objects = \
	`for file in $(libgasnet_sources) ; do echo \`basename $$file .c\`.o ; done` \
	$(CONDUIT_SPECIAL_OBJS)

libgasnet_dependencies =                  \
        $(CONFIG_HEADER)                  \
        $(srcdir)/*.[ch]                  \
        $(top_srcdir)/*.[ch]              \
        $(top_srcdir)/extended-ref/*.[ch] \
	$(top_srcdir)/other/*.h           \
	$(CONDUIT_SOURCELIST)             \
	$(CONDUIT_EXTRAHEADERS)           \
	$(CONDUIT_EXTRADEPS)

EXTRA_DIST = $(CONDUIT_FILELIST)

# library targets 
THREAD_MODEL=SEQ
THREAD_MODEL_LC=`echo "$(THREAD_MODEL)" | @AWK@ '{print tolower($$0)}'`
do-libgasnet: $(CONDUIT_SPECIAL_OBJS)
	$(CC) $(LIBCFLAGS) -c $(libgasnet_sources)
	@echo $(AR) cru libgasnet-$(CONDUIT_NAME)-$(THREAD_MODEL_LC).a $(libgasnet_objects)
	@$(AR) cru libgasnet-$(CONDUIT_NAME)-$(THREAD_MODEL_LC).a $(libgasnet_objects)
	@echo $(RANLIB) libgasnet-$(CONDUIT_NAME)-$(THREAD_MODEL_LC).a
	@$(RANLIB) libgasnet-$(CONDUIT_NAME)-$(THREAD_MODEL_LC).a
	@echo rm -f $(libgasnet_objects)
	@rm -f $(libgasnet_objects)

do-libgasnet-seq: $(libgasnet_dependencies) $(CONDUIT_SEQ_HOOK)
	@$(MAKE) THREAD_MODEL=SEQ LIBGASNET_THREAD_DEFINES= do-libgasnet

do-libgasnet-par: $(libgasnet_dependencies) $(CONDUIT_PAR_HOOK)
	@@HAVE_PTHREAD_FALSE@$(MAKE) do-pthreads-error
	@$(MAKE) THREAD_MODEL=PAR LIBGASNET_THREAD_DEFINES="$(thread_defines)" do-libgasnet

do-libgasnet-parsync: $(libgasnet_dependencies) $(CONDUIT_PARSYNC_HOOK)
	@@HAVE_PTHREAD_FALSE@$(MAKE) do-pthreads-error
	@$(MAKE) THREAD_MODEL=PARSYNC LIBGASNET_THREAD_DEFINES="$(thread_defines)" do-libgasnet

# test targets 

tests: force
	@echo You must specify one of tests-seq, tests-par or tests-parsync
	@exit 1

test: tests

tests-seq: force libgasnet-$(CONDUIT_NAME)-seq.a $(CONDUIT_NAME)-seq.mak $(CONDUIT_SEQ_HOOK)
	@echo "*** Building all GASNet tests in SEQ/$(GASNET_SEGMENT_STR) mode ***"
	@$(MAKE) -f $(top_builddir)/tests/Makefile tests-seq \
	  configfile="$(CONDUIT_NAME)-seq.mak" \
	  CONDUIT_TESTS="$(CONDUIT_TESTS)"

tests-parsync: force libgasnet-$(CONDUIT_NAME)-parsync.a $(CONDUIT_NAME)-parsync.mak $(CONDUIT_PARSYNC_HOOK)
	@echo "*** Building all GASNet tests in PARSYNC/$(GASNET_SEGMENT_STR) mode ***"
	@$(MAKE) -f $(top_builddir)/tests/Makefile tests-parsync \
	  configfile="$(CONDUIT_NAME)-parsync.mak" \
	  CONDUIT_TESTS="$(CONDUIT_TESTS)"

tests-par: force libgasnet-$(CONDUIT_NAME)-par.a $(CONDUIT_NAME)-par.mak $(CONDUIT_PAR_HOOK)
	@echo "*** Building all GASNet tests in PAR/$(GASNET_SEGMENT_STR) mode ***"
	@$(MAKE) -f $(top_builddir)/tests/Makefile tests-par \
	  configfile="$(CONDUIT_NAME)-par.mak" \
	  CONDUIT_TESTS="$(CONDUIT_TESTS)"

test%: $(top_srcdir)/tests/test%.c force 
	@$(MAKE) libgasnet-$(CONDUIT_NAME)-$(THREAD_MODEL_LC).a $(CONDUIT_NAME)-$(THREAD_MODEL_LC).mak
	@echo "*** Building $@ in $(THREAD_MODEL)/$(GASNET_SEGMENT_STR) mode ***"
	@$(MAKE) -f $(top_builddir)/tests/Makefile $@   \
	  configfile="$(CONDUIT_NAME)-$(THREAD_MODEL_LC).mak"

test%: $(top_srcdir)/tests/test%.cc force 
	@$(MAKE) libgasnet-$(CONDUIT_NAME)-$(THREAD_MODEL_LC).a $(CONDUIT_NAME)-$(THREAD_MODEL_LC).mak
	@echo "*** Building $@ in $(THREAD_MODEL)/$(GASNET_SEGMENT_STR) mode ***"
	@$(MAKE) -f $(top_builddir)/tests/Makefile $@   \
	  configfile="$(CONDUIT_NAME)-$(THREAD_MODEL_LC).mak"

test%-seq: force 
	@$(MAKE) `basename $@ -seq` THREAD_MODEL=SEQ
test%-parsync: force 
	@$(MAKE) `basename $@ -parsync` THREAD_MODEL=PARSYNC
test%-par: force 
	@$(MAKE) `basename $@ -par` THREAD_MODEL=PAR

tests-clean: 
	@$(MAKE) -f $(top_builddir)/tests/Makefile clean

run-tests do-run-testexit:
	@$(MAKE) -f $(top_builddir)/tests/Makefile $@ \
	  CONDUIT_NAME=$(CONDUIT_NAME) \
	  CONDUIT_RUNCMD="$(CONDUIT_RUNCMD)" \
	  CONDUIT_TESTS="$(CONDUIT_TESTS)"

run-tests-seq: tests-clean tests-seq run-tests
run-tests-par: tests-clean tests-par run-tests
run-tests-parsync: tests-clean tests-parsync run-tests

.PRECIOUS: run-testexit
run-testexit: force
	@if test ! -x testexit ; then \
	  $(MAKE) testexit-par ; \
	fi
	@$(MAKE) do-run-testexit	

force:

do-all: $(libraries) $(makefile_fragments)

do-clean-local: tests-clean
	@echo rm -f $(makefile_fragments) $(libgasnet_objects) $(libraries) *.o core
	@rm -f $(makefile_fragments) $(libgasnet_objects) $(libraries) *.o core


do-install-data-local: force $(headers) $(makefile_fragments)
	$(mkinstalldirs) $(DESTDIR)$(includedir)/$(CONDUIT_NAME)-conduit
	@list='$(headers)'; for p in $$list; do \
	  if test -f $$p; then \
	    filename=`basename $$p`; \
            if test "$$filename" = "`basename $$p _internal.h`" ; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(includedir)/$(CONDUIT_NAME)-conduit/$$filename"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(includedir)/$(CONDUIT_NAME)-conduit/$$filename; \
	    else :; fi; \
	  else :; fi; \
	done
	@list='$(makefile_fragments)'; for p in $$list; do \
	  if test -f $$p; then \
	    filename=`basename $$p`; \
	    echo "@GASNET_INSTALL_CMD@ < $$p > $(DESTDIR)$(includedir)/$(CONDUIT_NAME)-conduit/$$filename"; \
	    @GASNET_INSTALL_CMD@ < $$p > $(DESTDIR)$(includedir)/$(CONDUIT_NAME)-conduit/$$filename; \
	  else :; fi; \
	done

do-uninstall-local:
	rm -f $(DESTDIR)$(includedir)/$(CONDUIT_NAME)-conduit/*.h $(DESTDIR)$(includedir)/$(CONDUIT_NAME)-conduit/*.mak

do-error: 
	@echo "ERROR: $(CONDUIT_NAME)-conduit support was not detected at configure time"
	@echo "       try re-running configure with --enable-$(CONDUIT_NAME)"
	@exit 1

do-pthreads-error: 
	@echo "ERROR: pthreads support was not detected at configure time"
	@echo "       try re-running configure with --enable-pthreads"
	@exit 1

$(top_builddir)/other/Makefile-conduit.mak: $(top_srcdir)/other/Makefile-conduit.mak.in
	$(MAKE) -C $(top_builddir)/other Makefile-conduit.mak

$(top_builddir)/other/fragment-body.mak: $(top_srcdir)/other/fragment-body.mak.in
	$(MAKE) -C $(top_builddir)/other fragment-body.mak

$(top_builddir)/other/fragment-head.mak: $(top_srcdir)/other/fragment-head.mak.in
	$(MAKE) -C $(top_builddir)/other fragment-head.mak

$(top_builddir)/tests/Makefile: $(top_srcdir)/tests/Makefile.in
	$(MAKE) -C $(top_builddir)/tests Makefile

Makefile: $(srcdir)/Makefile.am $(top_builddir)/other/Makefile-conduit.mak $(top_builddir)/tests/Makefile


$(CONDUIT_NAME)-seq.mak: conduit.mak $(top_builddir)/other/fragment-head.mak $(top_builddir)/other/fragment-body.mak 
	$(MAKE) do-make-fragment thread_model=seq THREAD_MODEL=SEQ

$(CONDUIT_NAME)-par.mak: conduit.mak $(top_builddir)/other/fragment-head.mak $(top_builddir)/other/fragment-body.mak 
	@@HAVE_PTHREAD_FALSE@$(MAKE) do-pthreads-error
	$(MAKE) do-make-fragment thread_model=par THREAD_MODEL=PAR

$(CONDUIT_NAME)-parsync.mak: conduit.mak $(top_builddir)/other/fragment-head.mak $(top_builddir)/other/fragment-body.mak 
	@@HAVE_PTHREAD_FALSE@$(MAKE) do-pthreads-error
	$(MAKE) do-make-fragment thread_model=parsync THREAD_MODEL=PARSYNC

do-make-fragment: force
	rm -f $(CONDUIT_NAME)-$(thread_model).mak
	@echo Building $(CONDUIT_NAME)-$(thread_model).mak... ;                             \
	AUTOGENMSG='WARNING: This file is automatically generated - do NOT edit directly' ; \
	cat $(top_builddir)/other/fragment-head.mak                                         \
	    conduit.mak                                                                     \
	    $(top_builddir)/other/fragment-body.mak |                                       \
	sed -e 's@#conduit_name#@$(CONDUIT_NAME)@g'                                         \
	    -e 's@#THREAD_MODEL#@$(THREAD_MODEL)@g'                                         \
	    -e 's@#thread_model#@$(thread_model)@g'                                         \
	    -e '/#INSTRUCTIONS#/d'                                                          \
	    -e "s@#AUTOGEN#@$${AUTOGENMSG}@g"                                               \
	> $(CONDUIT_NAME)-$(thread_model).mak || exit 1
