BEGIN_DEFAULT_CONFIG
MakeFlags:      
Flags:          
Files:          $TESTNAME$.c
DynamicThreads: $DEFAULT$
StaticThreads:  0
CompileResult:  pass
PassExpr:       0
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
TimeLimit:      $DEFAULT$
RequireFeature: gasnet
END_DEFAULT_CONFIG

# ------------------------------------------
# Tests to compile, but not run

# complicated calling convention, known to hang in several cases
TestName:       testexit-seq
TimeLimit:      0

TestName:	check-exports
TimeLimit:      0
KnownFailure:   compile-failure ; cc_sun && (cpu_i386 || cpu_x86_64) && debug ; bug 1461 (check-exports fails w/ misc. compilers)

TestName:	check-libupcr-exports
TimeLimit:      0
KnownFailure:   compile-failure ; cc_sun && (cpu_i386 || cpu_x86_64) && debug ; bug 1461 (check-exports fails w/ misc. compilers)

# ------------------------------------------
# General SEQ tests 

TestName:       testgasnet-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
KnownFailure: run-all ; cpu_i386 && cc_sun && nodebug ; bug2154 (testgasnet failures on cloon_cc_pthreads-opt)

TestName:       testinternal-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testenv-seq
AppArgs:	GASNet is "Global Address Space Networking"
AppEnv: 	GASNET_DUMMY="GASNet dummy value"
#KnownFailure: run-all ; os_aix && (conduit_mpi || conduit_lapi) ; bug1039 (poe mishandles quoted program arguments)

TestName:       testsmall-seq
BenchmarkResult: -\s+8 byte :\s+\S+ iters, latency\s+\S+ us total,\s+(\S+) (us ave. \(put latency\))

TestName:       testlarge-seq
AppArgs: 100 2097152
TimeLimit: 300
BenchmarkResult: 2097152 byte :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(put_nb_bulk throughput\))

TestName:       testam-seq
DynamicThreads: 1,2    # limit threads to prevent output overflow
BenchmarkResult: AMShort ping-pong, roundtrip latency\s+:\s+\S+ sec\s+(\S+) (us)
KnownFailure: run-all ; cpu_x86_64 && conduit_elan ; bug1444 (elan exceptions on elan4/Opteron mu & hive) 

TestName:       testcore1-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
AppArgs: 1000

TestName:       testcore2-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testbarrier-seq
BenchmarkResult: Avg Anon. Barrier latency:\s+(\S+) (us)

TestName:       testlogGP-seq
AppArgs: 1000 0 8 65536
BenchmarkResult: -\s+8 byte :\s+\S+ iters,\s+\S+ us difference =\s+(\S+) (us/msg \(put: o_i - put_nb_bulk\))

TestName:       testvis-seq
AppArgs: 50
TimeLimit: 300

TestName:       testvisperf-seq
AppArgs: -maxdata 131072 -maxcontig 512 10
TimeLimit: 300

TestName:       testmisc-seq
BenchmarkResult: Do-nothing gasnet_AMPoll\(\)\s+:\s+\S+ sec\s+(\S+) (us/iter)
DynamicThreads: 1
KnownFailure: run-all ; cc_sun && cpu_sparc ; bug 1417 (Solaris 2.10/SunC 5.8 fails testmisc-par with -g)

TestName:       testalign-seq
AppArgs: 100
BenchmarkResult: byte\s+4 byte aligned :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(put_nb_bulk throughput\))

TestName:       testrand-seq
BenchmarkResult: Timer granularity: .. (\S+) (us), overhead: . \S+ us
AppArgs: 1024

TestName:       testbarrierconf-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testbarrierlate-seq
BenchmarkResult: Late notify\(\) Anon. Barrier net latency, average:\s+(\S+) (us)

TestName:       testcoll-seq
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testnbr-seq

TestName:       testqueue-seq
DynamicThreads: 2    # limit threads to prevent output overflow
AppArgs: 1 256 262144

TestName:       testhsl-seq
AppArgs: 0

TestName:       testtools-seq
DynamicThreads: 1  # avoid false negatives when num_pthreads < num_threads

TestName:       testslice-seq
DynamicThreads: 2 # test only works w/ 2 threads

TestName:       testcollperf-seq
AppArgs: 32768 2 50 0
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

# ------------------------------------------
# BEGIN PTHREADED TESTS

BEGIN_DEFAULT_CONFIG
MakeFlags:      
Flags:          
Files:          $TESTNAME$.c
DynamicThreads: $DEFAULT$
StaticThreads:  0
CompileResult:  pass
PassExpr:       0
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
TimeLimit:      $DEFAULT$
RequireFeature: gasnet,pthread_support
ProhibitFeature: conduit_shmem
END_DEFAULT_CONFIG

# ------------------------------------------
# General PAR tests 

TestName:       testgasnet-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
#KnownFailure: run-all ; cpu_x86_64 && conduit_elan ; bug1445 (gasnett_set_affinity broken on hive)

TestName:       testinternal-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testenv-par
AppArgs:	GASNet is "Global Address Space Networking"
AppEnv: 	GASNET_DUMMY="GASNet dummy value"
#KnownFailure: run-all ; os_aix && (conduit_mpi || conduit_lapi) ; bug1039 (poe mishandles quoted program arguments)

TestName:       testsmall-par
BenchmarkResult: -\s+8 byte :\s+\S+ iters, latency\s+\S+ us total,\s+(\S+) (us ave. \(get latency\))

TestName:       testlarge-par
AppArgs: 100 2097152
TimeLimit: 300
BenchmarkResult: 2097152 byte :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(get_nb_bulk throughput\))

TestName:       testam-par
DynamicThreads: 1,2    # limit threads to prevent output overflow
BenchmarkResult: AMShort ping-pong, roundtrip latency\s+:\s+\S+ sec\s+(\S+) (us)
KnownFailure: run-all ; cpu_x86_64 && conduit_elan ; bug1444 (elan exceptions on elan4/Opteron mu & hive) 

TestName:       testcore1-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
AppArgs: 1000

TestName:       testcore2-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testbarrier-par
BenchmarkResult: Avg Named Barrier latency:\s+(\S+) (us)

TestName:       testlogGP-par
AppArgs: 1000 8 65536
BenchmarkResult: -\s+8 byte :\s+\S+ iters,\s+\S+ us difference =\s+(\S+) (us/msg \(get: o_i - get_nb_bulk\))

TestName:       testvis-par
AppArgs: 50
TimeLimit: 300

TestName:       testvisperf-par
AppArgs: -maxdata 131072 -maxcontig 512 10
TimeLimit: 300

TestName:       testmisc-par
BenchmarkResult: Do-nothing gasnet_AMPoll\(\)\s+:\s+\S+ sec\s+(\S+) (us/iter)
DynamicThreads: 1
KnownFailure: run-all ; cc_sun && cpu_sparc ; bug 1417 (Solaris 2.10/SunC 5.8 fails testmisc-par with -g)

TestName:       testalign-par
AppArgs: 100
BenchmarkResult: byte\s+4 byte aligned :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(get_nb_bulk throughput\))

TestName:       testrand-par
BenchmarkResult: Timer granularity: .. \S+ us, overhead: . (\S+) (us)
AppArgs: 1024

TestName:       testbarrierconf-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

TestName:       testbarrierlate-par
BenchmarkResult: Late wait\(\) Anon. Barrier net latency, average:\s+(\S+) (us)

# Typically overcommits CPUs by a factor of 2, so reduce iters
TestName:       testcoll-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
AppArgs: 200

TestName:       testnbr-par

TestName:       testqueue-par
DynamicThreads: 2    # limit threads to prevent output overflow
AppArgs: 1 256 262144

TestName:       testhsl-par
AppArgs: 0

TestName:       testtools-par
DynamicThreads: 1  # avoid false negatives when num_pthreads < num_threads

TestName:       testslice-par
DynamicThreads: 2 # test only works w/ 2 threads

TestName:       testcollperf-par
AppArgs: 32768 2 50 0
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel

# ------------------------------------------
# PAR-only tests

TestName:       testthreads-par
DynamicThreads: 1,$DEFAULT$ # test loopback and parallel
AppArgs:  2

TestName:       testcontend-par

# ------------------------------------------
# PARSYNC tests

# Build parysync lib, hiding all warnings
TestName:	parsync
TimeLimit:      0
KnownFailure:   compile-warning ; ; bug 2148 (parsync gasnet tests cause harness failures)

TestName:       testgasnet-parsync

# ------------------------------------------
# Conduit-specific test
TestName:	testconduitspecific
DynamicThreads: 2    # limit threads to prevent output overflow
KnownFailure: run-all ; cpu_x86_64 && conduit_elan ; bug1444 (elan exceptions on elan4/Opteron mu & hive) 


