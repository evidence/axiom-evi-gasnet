BEGIN_DEFAULT_CONFIG
MakeFlags:      
Flags:          
Files:          $TESTNAME$.c
DynamicThreads: $DEFAULT$
StaticThreads:  0
CompileResult:  pass
PassExpr:       0
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
TimeLimit:      $DEFAULT$
RequireFeature: gasnet
END_DEFAULT_CONFIG

# ------------------------------------------
# Tests to compile, but not run

# complicated calling convention, known to hang in several cases
TestName:       testexit-seq
TimeLimit:      0

# intended to fail at runtime on some conduits
TestName:       testhsl-seq
TimeLimit:      0

TestName:	check-exports
TimeLimit:      0

TestName:	check-libupcr-exports
TimeLimit:      0

# ------------------------------------------
# General SEQ tests 

TestName:       testgasnet-seq

TestName:       testenv-seq
AppArgs:	GASNet is "Global Address Space Networking"
AppEnv: 	GASNET_DUMMY="GASNet dummy value"
#KnownFailure: run-all ; os_aix && (mpi-conduit || lapi-conduit) ; bug1039 (poe mishandles quoted program arguments)

TestName:       testsmall-seq
BenchmarkResult: -\s+8 byte :\s+\S+ iters, latency\s+\S+ us total,\s+(\S+) (us ave. \(put latency\))

TestName:       testlarge-seq
AppArgs: 100 2097152
TimeLimit: 300
BenchmarkResult: 2097152 byte :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(put_nb_bulk throughput\))

TestName:       testam-seq
DynamicThreads: 2    # limit threads to prevent output overflow
BenchmarkResult: AMShort ping-pong, roundtrip latency\s+:\s+\S+ sec\s+(\S+) (us)

TestName:       testcore1-seq
AppArgs: 1000

TestName:       testbarrier-seq
BenchmarkResult: Avg Anon. Barrier latency:\s+(\S+) (us)

TestName:       testlogGP-seq
AppArgs: 1000 8 65536
BenchmarkResult: -\s+8 byte :\s+\S+ iters,\s+\S+ us difference =\s+(\S+) (us/msg \(put: o_i - put_nb_bulk\))

TestName:       testvis-seq
AppArgs: 50
TimeLimit: 300

TestName:       testmisc-seq
BenchmarkResult: Do-nothing gasnet_AMPoll\(\)\s+:\s+\S+ sec\s+(\S+) (us/iter)
DynamicThreads: 1

TestName:       testalign-seq
AppArgs: 100
BenchmarkResult: byte\s+4 byte aligned :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(put_nb_bulk throughput\))

TestName:       testrand-seq
BenchmarkResult: Timer granularity: .. (\S+) (us), overhead: . \S+ us
AppArgs: 1024

TestName:       testbarrierconf-seq

TestName:       testbarrierlate-seq
BenchmarkResult: Late notify\(\) Anon. Barrier net latency, average:\s+(\S+) (us)

TestName:       testcoll-seq

TestName:       testnbr-seq

TestName:       testqueue-seq
DynamicThreads: 2    # limit threads to prevent output overflow
AppArgs: 1 256 262144

# ------------------------------------------
# SEQ-only tests

TestName:       testtools-seq
DynamicThreads: 1  # avoid false negatives when num_pthreads < num_threads

# ------------------------------------------
# BEGIN PTHREADED TESTS

BEGIN_DEFAULT_CONFIG
MakeFlags:      
Flags:          
Files:          $TESTNAME$.c
DynamicThreads: $DEFAULT$
StaticThreads:  0
CompileResult:  pass
PassExpr:       0
FailExpr:       ERROR
ExitCode:       0
BuildCmd:       make,notrans
AppArgs:        
TimeLimit:      $DEFAULT$
RequireFeature: gasnet,pthread_support
ProhibitFeature: shmem-conduit
END_DEFAULT_CONFIG

# ------------------------------------------
# General PAR tests 

TestName:       testgasnet-par

TestName:       testenv-par
AppArgs:	GASNet is "Global Address Space Networking"
AppEnv: 	GASNET_DUMMY="GASNet dummy value"
#KnownFailure: run-all ; os_aix && (mpi-conduit || lapi-conduit) ; bug1039 (poe mishandles quoted program arguments)

TestName:       testsmall-par
BenchmarkResult: -\s+8 byte :\s+\S+ iters, latency\s+\S+ us total,\s+(\S+) (us ave. \(get latency\))

TestName:       testlarge-par
AppArgs: 100 2097152
TimeLimit: 300
BenchmarkResult: 2097152 byte :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(get_nb_bulk throughput\))

TestName:       testam-par
DynamicThreads: 2    # limit threads to prevent output overflow
BenchmarkResult: AMShort ping-pong, roundtrip latency\s+:\s+\S+ sec\s+(\S+) (us)

TestName:       testcore1-par
AppArgs: 1000

TestName:       testbarrier-par
BenchmarkResult: Avg Named Barrier latency:\s+(\S+) (us)

TestName:       testlogGP-par
AppArgs: 1000 8 65536
BenchmarkResult: -\s+8 byte :\s+\S+ iters,\s+\S+ us difference =\s+(\S+) (us/msg \(get: o_i - get_nb_bulk\))

TestName:       testvis-par
AppArgs: 50
TimeLimit: 300

TestName:       testmisc-par
BenchmarkResult: Do-nothing gasnet_AMPoll\(\)\s+:\s+\S+ sec\s+(\S+) (us/iter)
DynamicThreads: 1

TestName:       testalign-par
AppArgs: 100
BenchmarkResult: byte\s+4 byte aligned :\s+\S+ iters, throughput\s+(\S+) (KB/sec \(get_nb_bulk throughput\))

TestName:       testrand-par
BenchmarkResult: Timer granularity: .. \S+ us, overhead: . (\S+) (us)
AppArgs: 1024

TestName:       testbarrierconf-par

TestName:       testbarrierlate-par
BenchmarkResult: Late wait\(\) Anon. Barrier net latency, average:\s+(\S+) (us)

TestName:       testcoll-par

TestName:       testnbr-par

TestName:       testqueue-par
DynamicThreads: 2    # limit threads to prevent output overflow
AppArgs: 1 256 262144

# ------------------------------------------
# PAR-only tests

TestName:       testthreads-par
AppArgs:  2

TestName:       testcontend-par

# ------------------------------------------
# PARSYNC tests
TestName:       testgasnet-parsync

# ------------------------------------------
# Conduit-specific test
TestName:	testconduitspecific
DynamicThreads: 2    # limit threads to prevent output overflow


