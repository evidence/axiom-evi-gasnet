README file for gm-conduit
=======================================
Christian Bell <csbell@cs.berkeley.edu>

This first version of the GM conduit implements the full GASNet spec.  Here are
some of the highlights and quirks. .

********************************************************************************
** Bootstrapping

    Bootstrapping has always been a problem over Myrinet.  Myricom releases a
    better better job spawner at every MPICH release but is not quite there
    yet.  As of MPICH 1.2.4.x, MPICH/GM uses a perl script spawner to
    distribute GM port usage information at initialization.  This script has
    been included and edited here in order to work with the GM conduit.
    However, it is also possible to bootstrap using a ~/.gmpi/conf file in
    user's home directories (this use to be the bootstrap method before MPICH
    1.2.4.x was released).  To summarize, the following bootstrap methods are
    attempted. .

    1. If the included gasnetrun.pl script is used, GM port information is
       exchanged through a spawning script.
    2. If the script isn't used, port information is read from
       $HOME/.gmpi/conf.  The syntax of the file is the following:
       2
       host001 2
       host002 4
       Where the first line contains the number of processors and each other
       line contains the host and its GM port number.
       This method of bootstrapping is useful for sites which run GM port
       daemons and for debugging.

********************************************************************************
** Memory registration

    The GM conduit presents a new algorithm for dealing with pinning of large
    memory spaces.  See paper at http://upc.lbl.gov/publications/ for

       Bell, Bonachea. "A New DMA Registration Strategy for Pinning-Based High
       Performance Networks", Workshop on Communication Architecture for
       Clusters (CAC'03), 2003.

    Memory pinning is controlled through two parameters, M and MAXVICTIM.  The
    sum of both of these parameters represents the total amount of memory that
    can be pinned locally. M is the amount put aside to satisfy remote requests
    for pinned memory while MAXVICTIM is the amount to satisfy locally
    initiated one-sided operations.  These parameters are controlled at runtime
    using two environment variables,
       GASNETGM_FIREHOSE_M,
       GASNETGM_FIREHOSE_MAXVICTIM.
    Although a site administrator can tune these values to better match the
    cluster's needs, the bootstrapping mechanism manages to find a sensible
    default.  If the gasnetrun script is used, the '--fh-M' and
    '--fh-maxvictim' switches allow to set these values.

********************************************************************************
** File list

    Core files:
    ****************************************************************************
    gasnet_core.c		Main core functions
    gasnet_core.h		Function prototypes for core
    gasnet_core_fwd.h
    gasnet_core_help.h
    gasnet_core_internal.h
    gasnet_core_firehose.c	Client-independent implementation of the
				firehose dynamic memory registration algorithm
				over AM
    gasnet_core_misc.c		Misc. core functions send/callbacks/AM
    gasnet_core_receive.c	GM receive/polling functions and AM reception
    
    Extended files:
    ****************************************************************************
    gasnet_extended.c		Main extended functions, which remain
    				independent of the dynamic memory registration
    				algorithm (mostly functions to sync and access
    				regions).
    gasnet_extended_internal.h
    gasnet_extended_op.c	Op management, important from extended-ref
    gasnet_extended_ref.c	Extended ref operations, used as fallbacks in
    				both turkey and firehose algorithms
    gasnet_extended.h		Function prototypes for extended
    gasnet_extended_firehose.c	Extended firehose provides all put/get
    				functions for firehose algorithm and supplies
    				AM reply handlers to plug into
    				gasnet_core_firehose.c 
    
********************************************************************************
** Development CVS tags/branches
	GM_RENDEZVOUS:	gm-conduit specific tag, which uses a snapshot from Oct
			2002 and implements rendezvous instead of firehose.
			This was needed in a firehose paper showing performance
			characteristics and comparing the algorithm to a
			rendezvous approach.
			
			From a current gasnet checkout, in gm-conduit
			directory, run
			% cvs up -PAd -r GM_RENDEZVOUS
			Note that some minor code changes might be required in
			order to have this version of the gm-conduit compile.

********************************************************************************
** Basic Extended API Design for puts/gets

	firehose_move_put
		send AMRequest with list of new and replacement firehoses
		at AMRequestH, pin/inc locally and send AMReply
		at AMReplyH, update firehose table from list 

	GM 1.x
	firehose_move_get_v1 (op):
		send AMRequest with remote source location 
		at AMRequestH, pin/inc locally and send AMReplyAsync
		at AMReplyH, decrement/unpin locally

	GM 2.x
	firehose_move_get_v2 (op):
		if get hits firehose cache
			local pin
			rdma get
			completion decrements/unpins destination
		else
			send Firehose pin request
			at callback, update table 
			rdma get
			decrement locally
	***********************************************************************
	GASNet Puts/Gets 
	put_nb/put_nbi:
		if < GASNETE_PUT_NON_BULK_CUTOFF
			get a pinned AM buffer (or poll until one is obtained)
			copy source data into buffer 
			if put hits firehose cache
				increment firehose count
				rdma put
				at completion, decrement/unpin locally and
				               decrement firehose count
			else
				firehose_move_put
		else
			use AM ref-ext
	
	put_nb_bulk/put_nbi_bulk:
		if > GASNETE_PUT_NON_DMA_CUTOFF
			pin/increment source data and/or local bucket
			if put hits firehose cache
				rdma put
			else
				firehose_move_put
		use
			use AM ref-ext
	
	get_nb/get_nbi (bulk and non-bulk):
		if > GASNETE_GET_NON_DMA_CUTOFF
			pin/increment destination data and/or local bucket
			firehose_move_get
		else
			use AM ref-ext
			
